{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Recipes API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "API for managing and sharing culinary recipes."
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "User authentication endpoints"
    },
    {
      "name": "Users",
      "description": "User-related endpoints"
    },
    {
      "name": "Categories",
      "description": "Recipe categories endpoints"
    },
    {
      "name": "Ingredients",
      "description": "Recipe ingredients endpoints"
    },
    {
      "name": "Recipes",
      "description": "Endpoints for managing recipes"
    }
  ],
  "paths": {
    "/api/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get a list of recipe categories",
        "description": "Public endpoint. Returns an array of categories.",
        "operationId": "getCategories",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found categories!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT authentication scheme"
      }
    },
    "schemas": {
      "recipe": {
        "$ref": "#/components/schemas/Recipe"
      },
      "user": {
        "$ref": "#/components/schemas/User"
      },
      "ingredient": {
        "$ref": "#/components/schemas/Ingredient"
      },
      "category": {
        "$ref": "#/components/schemas/Category"
      },
      "session": {
        "$ref": "#/components/schemas/Session"
      },
      "Category": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "Category's unique identifier",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Name of the category",
            "type": "string",
            "example": "Main Course"
          },
          "title": {
            "type": "string",
            "example": "Breakfast"
          },
          "slug": {
            "type": "string",
            "example": "breakfast"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-20T10:11:12.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-20T10:11:12.000Z"
          }
        },
        "required": [
          "_id",
          "name",
          "title",
          "slug"
        ]
      },
      "Recipe": {
        "type": "object",
        "required": [
          "_id",
          "userId",
          "name",
          "description",
          "ingredients",
          "instructions",
          "category",
          "cookingTime"
        ],
        "properties": {
          "_id": {
            "description": "Recipe's unique identifier",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "userId": {
            "description": "ID of the user who created the recipe",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Name of the recipe",
            "type": "string",
            "example": "Spaghetti Carbonara"
          },
          "photo": {
            "description": "URL of the recipe photo",
            "type": "string",
            "format": "uri",
            "example": "https://example.com/photo.jpg"
          },
          "description": {
            "description": "Short description of the recipe",
            "type": "string",
            "example": "A classic Italian pasta dish made with eggs, cheese, pancetta, and pepper."
          },
          "ingredients": {
            "description": "List of ingredients required for the recipe. Note: swagger has garbage support for arrays, so if youre referencing this schema as request body, write it as one item like so: [{\"ingredient\": \"Potato\", \"quantity\": \"200g\"}, {\"ingredient\": \"Pickle\", \"quantity\": \"100g\"}]",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ingredient": {
                  "description": "ID of the ingredient",
                  "type": "string",
                  "example": "65e4decdd286b30065d54af9"
                },
                "quantity": {
                  "description": "Quantity of the ingredient",
                  "type": "string",
                  "example": "200g"
                }
              }
            }
          },
          "instructions": {
            "type": "string",
            "description": "Step-by-step instructions to prepare the recipe",
            "example": "Cook spaghetti, mix with eggs and cheese, add bacon and pepper."
          },
          "category": {
            "description": "ID of the category of the recipe ",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "cookingTime": {
            "description": "Estimated cooking time in minutes",
            "type": "integer",
            "example": 30
          },
          "foodEnergy": {
            "description": "Estimated food energy in kcal",
            "type": "number",
            "example": 600
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "User's unique identifier",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Name of the user",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "Email address of the user",
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "description": "Password for the user account",
            "type": "string",
            "format": "password",
            "example": "strongpassword123"
          },
          "favouriteRecipes": {
            "description": "List of IDs of the user's favourite recipes",
            "type": "array",
            "items": {
              "type": "string",
              "example": "65e4decdd286b30065d54af9"
            }
          }
        }
      },
      "Ingredient": {
        "type": "object",
        "required": [
          "_id",
          "name"
        ],
        "properties": {
          "_id": {
            "description": "Ingredient's unique identifier",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Name of the category",
            "type": "string",
            "example": "Potato"
          }
        }
      },
      "Session": {
        "type": "object",
        "required": [
          "_id",
          "userId",
          "accessToken",
          "refreshToken",
          "accessTokenValidUntil",
          "refreshTokenValidUntil"
        ],
        "properties": {
          "_id": {
            "description": "Session's unique identifier",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "userId": {
            "description": "ID of the user associated with the session",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "accessToken": {
            "description": "JWT access token for the session",
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "refreshToken": {
            "description": "JWT refresh token for the session",
            "type": "string",
            "example": "d1f2e3g4h5i6j7k8l9m0n1o2p3q4r5s6t7u8v9w0x1y2z3a4b5c6d7e8f9g0h1i2j3k4l5m6n7o8p9q0r1s2t3u4v5w6x7y8z"
          },
          "accessTokenValidUntil": {
            "description": "Timestamp when the access token expires",
            "type": "string",
            "format": "date-time",
            "example": "2023-10-01T12:00:00Z"
          },
          "refreshTokenValidUntil": {
            "description": "Timestamp when the refresh token expires",
            "type": "string",
            "format": "date-time",
            "example": "2023-12-01T12:00:00Z"
          }
        }
      }
    }
  }
}